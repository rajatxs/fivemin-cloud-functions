<style>
   .post-content {
      margin-left: auto;
      margin-right: auto;
   }
   .post-tag-links {
      display: flex;
      gap: var(--gap-half);
      justify-content: center;
      align-items: stretch;
      flex-wrap: wrap;
   }
   .fm-post__cover_image {
      border-radius: 12px;
      height: 400px;
      background-position: center;
      background-size: cover;
      background-repeat: no-repeat;
      background-image: url('<%= postCoverImageUrl %>');
   }
   .post-body h1,
   .post-body h2,
   .post-body h3,
   .post-body h4,
   .post-body h5,
   .post-body h6 {
      padding: 8px 0;
   }
   .post-body pre {
      line-break: anywhere;
      white-space: break-spaces;
   }

   .fm-post__cover_image, .fm-post__paragraph, .content__image_block {
      position: relative;
   }
   .fm-post__caption, .content__image_caption {
      display: block;
      text-align: center;
      font-size: 90%;
      color: var(--accents-4);
   }
   .fm-post__cover_image_ref, .fm-post__image_ref, .content__image_ref {
      display: inline-flex;
      position: absolute;
      min-width: 60px;
      text-align: center;
      top: var(--gap-half);
      right: var(--gap-half);
      padding: var(--gap-quarter) var(--gap-half);
      background-color: var(--overlay-dark);
      color: var(--light);
      border-radius: 25px;
      opacity: 0.7;
      transition: opacity 120ms ease, background-color 40ms linear;
   }
   .fm-post__cover_image_ref small, .fm-post__image_ref small, .content__image_ref small {
      margin-left: auto;
      margin-right: auto;
   }
   .fm-post__cover_image_ref:hover, .fm-post__image_ref:hover, .content__image_ref:hover {
      background-color: var(--light-fr);
      opacity: 1;
   }
   .fm-post__cover_image_ref:focus, .fm-post__image_ref:focus, .content__image_ref:focus {
      background-color: var(--light-fr);
   }

   .content__image_block {
      margin: 1rem 0;
      line-height: 1.825em;
   }
   .content__image_caption {
      margin-top: 4px;
   }

   .content__code_block {
      position: relative;
      border-radius: var(--radius);
      margin-bottom: 1rem;
      overflow-x: auto;
   }
   .content__code_block pre.content__code {
      margin: 0;
      padding-top: var(--gap);
      padding-bottom: var(--gap);
      padding-left: var(--gap);
      padding-right: 52pt;
      font-family: var(--font-mono);
      white-space: pre;
      overflow-x: auto;
   }

   .content__code_block, code.inline-code {
      border: 1px solid var(--accents-2);
      background-color: var(--accents-1);
   }

   .content__code_block .content__btn_copy_code {
      position: absolute;
      top: 12pt;
      right: 12pt;
      width: auto;
      min-width: auto;
      height: 2rem;
      min-height: auto;
      padding: auto;
      pointer-events: all;
   }

   .content__code_block .content__btn_copy_code .app-icon.clipboard-icon {
      display: inline-block;
   }
   .content__code_block .content__btn_copy_code .app-icon.check-icon {
      display: none;
   }

   .content__code_block .content__btn_copy_code.copied {
      pointer-events: none;
   }

   .content__code_block .content__btn_copy_code.copied .app-icon.clipboard-icon {
      display: none;
   }

   .content__code_block .content__btn_copy_code.copied .app-icon.check-icon {
      display: inline-block;
   }

   code.inline-code {
      padding: 2px 4px;
      border-radius: 4px;
   }

   .content__warn {
      padding: var(--gap);
      background-color: var(--warn);
      border-radius: var(--radius);
      color: var(--warn-fr);
   }
   .content__warn_message {
      margin: 0;
   }

   /* X-Small */
   @media (max-width: 576px) {
      .post-content {
         width: 350px;
      }
      .post-tag-links {
         justify-content: flex-start;
      }
      .fm-post__cover_image {
         height: 200px;
      }
      .content__code_block pre.content__code {
         font-size: 14px;
      }
   }

   /* Small */
   @media (min-width: 576px) {
      .post-content {
         width: 500px;
      }
   }

   /* Medium */
   @media (min-width: 768px) {
      .post-content {
         width: 700px;
      }
   }
</style>

<main class="page-content-y-padding">
   <article class="post-content">
      <header>
         <h1 class="post-title"><%= postTitle %></h1>
         <p class="post-meta">
            <a 
               href="<%= postTopicUrl %>" 
               aria-label="<%= postTopic %> Topic" 
               class="post-topic">
               <%= postTopic %>
            </a>
            <span>&bull;</span>
            <time datetime="<%= postPublishTimeFormat %>"><%= postPublishTime %></time>
         </p>
      </header>

      <section class="fm-post__cover_image">
         <% if (postCoverImageRefName.length && postCoverImageRefUrl.length) { %>
            <a 
               href="<%= postCoverImageRefUrl %>" 
               target="_blank" 
               aria-hidden="true"
               tabindex="-1"
               class="fm-post__cover_image_ref">
               <small><%= postCoverImageRefName %></small>
            </a>
         <% } %>
      </section>

      <br />

      <section id="fm-post-body" class="post-body">
         <%- postBody %>
      </section>
   </article>

   <br />

   <nav class="post-tag-links">
      <% for (const tag of postTags) { %>
         <a 
            href="<%= `/search?q=${encodeURI(tag)}` %>" 
            aria-label="Search <%= tag %>"
            class="post-tag-link app-button small adaptive">
            <small><%= tag %></small>
         </a>
      <% } %>
   </nav>

   <% if (relatedPosts.length > 0) { %>
      <br />
      <hr />
      <br />
   
      <%- include(`partials/post-collection`, { posts: relatedPosts, showTopic: true }) %>
   <% } %>
</main>

<script>
function createClipboardIcon() {
   const svgElem = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
   svgElem.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
   svgElem.setAttribute('class', 'app-icon clipboard-icon');
   svgElem.setAttribute('viewBox', '0 0 24 24');

   const pathElem = document.createElementNS('http://www.w3.org/2000/svg', 'path');
   pathElem.setAttribute('d', 'M19 3h-2.25a1 1 0 0 0-1-1h-7.5a1 1 0 0 0-1 1H5c-1.103 0-2 .897-2 2v15c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2V5c0-1.103-.897-2-2-2zm0 17H5V5h2v2h10V5h2v15z');
   svgElem.appendChild(pathElem);

   return svgElem;
}

function createCheckIcon() {
   const svgElem = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
   svgElem.setAttribute('xmlns', 'http://www.w3.org/2000/svg');
   svgElem.setAttribute('class', 'app-icon check-icon');
   svgElem.setAttribute('viewBox', '0 0 24 24');

   const pathElem = document.createElementNS('http://www.w3.org/2000/svg', 'path');
   pathElem.setAttribute('d', 'm10 15.586-3.293-3.293-1.414 1.414L10 18.414l9.707-9.707-1.414-1.414z');
   svgElem.appendChild(pathElem);

   return svgElem;
}

;(function () {
   const postBodyRoot = document.getElementById('fm-post-body');

   // Assigning the target attribute to each hyperlink
   for (const href of postBodyRoot.getElementsByTagName('a')) {
      if (!href.hasAttribute('target')) {
         href.classList.add('content__href');
         href.setAttribute('target', '_blank');
      }
   }

   // Inserting a button for the clipboard write action within the code block
   for (const codeBlock of postBodyRoot.getElementsByClassName('content__code_block')) {
      const codeElem = codeBlock.querySelector('.content__code');
      if (!codeElem) {
         continue;
      }

      const copyBtn = document.createElement('button');
      copyBtn.type = 'button';
      copyBtn.title = 'Copy to Clipboard';
      copyBtn.classList.add('content__btn_copy_code');
      copyBtn.append(createClipboardIcon(), createCheckIcon());

      copyBtn.addEventListener('click', async function() {
         if (copyBtn.classList.contains('copied')) {
            return;
         }

         try {
            copyTextToClipboard(codeElem.textContent, function() {
               copyBtn.classList.add('copied');

               setTimeout(function() {
                  copyBtn.classList.remove('copied');
               }, 5000);
            });
         } catch (error) {
            console.error(error);
         }
      });
      codeBlock.appendChild(copyBtn);
   }
}());
</script>
